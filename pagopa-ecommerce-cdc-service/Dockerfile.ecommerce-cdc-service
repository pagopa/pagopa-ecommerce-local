### 1. Cloning stage
FROM alpine/git:latest AS clone
WORKDIR /workspace/pagopa-ecommerce-cdc-service

ARG ECOMMERCE_CDC_COMMIT_SHA

RUN rm -rf * && \
    git clone https://github.com/pagopa/pagopa-ecommerce-cdc-service.git /workspace/pagopa-ecommerce-cdc-service && \
    git checkout ${ECOMMERCE_CDC_COMMIT_SHA} 

### 2. Commons build stage
FROM amazoncorretto:21-alpine@sha256:6a98c4402708fe8d16e946b4b5bac396379ec5104c1661e2a27b2b45cf9e2d16 AS commons-builder
WORKDIR /workspace/app
RUN apk add --no-cache findutils git

# Memory optimization for Maven builds
ENV MAVEN_OPTS="-Xmx4g -XX:+UseG1GC"

COPY --from=clone /workspace/pagopa-ecommerce-cdc-service/ ./

RUN chmod +x ./gradlew
RUN chmod +x ./pagopa-ecommerce-commons-maven-install.sh
RUN COMMONS_VERSION=$(./gradlew -q printCommonsVersion) && \
    ./pagopa-ecommerce-commons-maven-install.sh $COMMONS_VERSION

### 3. Application build stage
FROM amazoncorretto:21-alpine@sha256:6a98c4402708fe8d16e946b4b5bac396379ec5104c1661e2a27b2b45cf9e2d16 AS build
WORKDIR /workspace/app

# Install dependencies
RUN apk add --no-cache git maven

# Copy the cloned source code
COPY --from=clone /workspace/pagopa-ecommerce-cdc-service/ ./

# Copy commons dependencies
COPY --from=commons-builder /root/.m2 /root/.m2

# Build application
RUN chmod +x ./gradlew
RUN ./gradlew build -x test

RUN mkdir build/extracted && \
    java -Djarmode=layertools -jar $(find build/libs/ -name "*.jar" ! -name "*-plain.jar") extract --destination build/extracted

### 4. Run stage
FROM amazoncorretto:21-alpine@sha256:6a98c4402708fe8d16e946b4b5bac396379ec5104c1661e2a27b2b45cf9e2d16

RUN addgroup --system user && adduser --ingroup user --system user
USER user:user

ARG EXTRACTED=/workspace/app/build/extracted

#ELK Agent
ADD --chown=user https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v2.2.0/opentelemetry-javaagent.jar .

COPY --from=build --chown=user ${EXTRACTED}/dependencies/ ./
RUN true
COPY --from=build --chown=user ${EXTRACTED}/spring-boot-loader/ ./
RUN true
COPY --from=build --chown=user ${EXTRACTED}/snapshot-dependencies/ ./
RUN true
COPY --from=build --chown=user ${EXTRACTED}/application/ ./
RUN true

ENTRYPOINT ["java","-javaagent:opentelemetry-javaagent.jar","org.springframework.boot.loader.launch.JarLauncher"]